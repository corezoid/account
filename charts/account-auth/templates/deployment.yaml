{{- $global_data := .Values.global -}}
{{- $account_data := .Values.global.account -}}
{{- $auth_data := $account_data.auth -}}
{{- $app_name := (include "module.auth.name" . ) -}}
{{- $application_tag := .Values.global.account.auth.tag | default .Chart.AppVersion -}}

{{- if ne .Values.global.account.config.one_app true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "account.auth.deployment.name" . }}
  labels:
    {{- include "account.auth.labels" . | nindent 4 }}
spec:
{{- if $auth_data.autoscaling }}
{{- if $auth_data.autoscaling.enabled }}
  replicas: {{ $auth_data.autoscaling.minReplicas }}
{{- end }}
{{- else }}
  replicas: {{ $auth_data.replicas | default 1 }}
{{- end }}
  selector:
    matchLabels:
      {{- include "account.auth.labels" . | nindent 6 }}
{{- with $global_data.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
    {{- if eq $global_data.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if and .Values.global.pyroscope .Values.global.pyroscope.enabled }}
        # Pyroscope CPU profiling
        profiles.grafana.com/cpu.scrape: "true"
        profiles.grafana.com/cpu.port: "{{ include "account.auth.portProfilerNumber" . }}"
        profiles.grafana.com/cpu.path: "/debug/pprof/profile"
        # Pyroscope Memory profiling
        profiles.grafana.com/memory.scrape: "true"
        profiles.grafana.com/memory.port: "{{ include "account.auth.portProfilerNumber" . }}"
        profiles.grafana.com/memory.path: "/debug/pprof/heap"
        # Pyroscope Goroutine profiling
        profiles.grafana.com/goroutine.scrape: "true"
        profiles.grafana.com/goroutine.port: "{{ include "account.auth.portProfilerNumber" . }}"
        profiles.grafana.com/goroutine.path: "/debug/pprof/goroutine"
        # Pyroscope Block profiling
        profiles.grafana.com/block.scrape: "true"
        profiles.grafana.com/block.port: "{{ include "account.auth.portProfilerNumber" . }}"
        profiles.grafana.com/block.path: "/debug/pprof/block"
        # Pyroscope Mutex profiling
        profiles.grafana.com/mutex.scrape: "true"
        profiles.grafana.com/mutex.port: "{{ include "account.auth.portProfilerNumber" . }}"
        profiles.grafana.com/mutex.path: "/debug/pprof/mutex"
        {{- end }}
        {{- include "account.auth.annotations" . | nindent 4 }}
      labels:
        {{- include "account.auth.labels" . | nindent 8 }}
        app.kubernetes.io/name: {{ include "module.auth.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ $application_tag | quote }}
        app.kubernetes.io/component: auth
        app.kubernetes.io/part-of: singlespace
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- if kindIs "slice" .Values.global.imagePullSecrets }}
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
      {{- else if .Values.global.imagePullSecrets.name }}
        - name: {{ .Values.global.imagePullSecrets.name }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{- include "account.auth.serviceaccount.name" . | nindent 8 }}
      securityContext:
        {{- toYaml $account_data.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ $auth_data.terminationGracePeriodSeconds | default 60 }}
      initContainers:
        {{ include "AccountInitWaitDatabase" . | nindent 8 | trim }}
        {{ include "AccountInitWaitRedis" . | nindent 8 | trim }}
        {{- if and (hasKey $auth_data "verify_signature") (eq $auth_data.verify_signature true) }}
        {{ include "AccountInitVerifyImageSignature" (dict "Values" .Values "Chart" .Chart "Release" .Release "subchart" "auth" "application_tag" $application_tag) | nindent 8 | trim }}
        {{- end }}
      containers:
        - name: {{ include "module.auth.name" . }}
          securityContext:
            {{- toYaml $account_data.securityContext | nindent 14 }}
          image: {{ include "account.auth.imageUrl" . | quote }}
          imagePullPolicy: {{ $account_data.pullPolicy | default "IfNotPresent" }}
          env:
            - name: SS_CONFIG
              value: "{{ .Values.configPath }}/{{ .Values.configName }}"
            {{- if $auth_data.auth_providers_keys }}
            {{- if $auth_data.auth_providers_keys.apple }}
            - name: AUTH_APPLE_SECRET_PATH
              value: "{{ .Values.configPath }}/apple"
            {{- end }}
            {{- end }}
          {{- include "account.container_envs_redis" .  | trim | nindent 12 }}
          {{- include "account.container_envs_db" .  | trim | nindent 12 }}
          {{- include "account.container_envs_secrets" .  | trim | nindent 12 }}
          ports:
            - name: {{ include "account.auth.portHttpName" . }}
              containerPort: {{ include "account.auth.portNumber" . }}
              protocol: {{ include "account.auth.portProtocol" . }}
            - name: metrics
              containerPort: {{ include "account.auth.portMetricsNumber" . }}
              protocol: {{ include "account.auth.portProtocol" . }}
            {{- if and .Values.global.pyroscope .Values.global.pyroscope.enabled }}
            - name: pprof
              containerPort: {{ include "account.auth.portProfilerNumber" . }}
              protocol: TCP
            {{- end }}
          {{- include "account.auth.liveness" . | nindent 10 }}
          {{- include "account.auth.readiness" . | nindent 10 }}
          resources:
          {{- if $auth_data.resources }}
            {{- toYaml $auth_data.resources | nindent 12 }}
          {{- else }}
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]
          volumeMounts:
            - name: {{ $app_name }}-config-volume
              mountPath: {{ .Values.configPath }}/{{ .Values.configName }}
              subPath: {{ .Values.configName }}
            {{- if and $account_data.config.auth_providers $account_data.config.auth_providers.saml }}
            {{- if $account_data.config.auth_providers.saml.google_saml }}
            {{- if eq $account_data.config.auth_providers.saml.google_saml.enabled true }}
            - name: metadata-google
              mountPath: /opt/conf/google_metadata.xml
              subPath: google_metadata.xml
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if $account_data.persistantVolumeClaimCreate }}
            - name: {{ $app_name }}-pvc
              mountPath: /{{ $account_data.persistantVolumeClaimShareDir }}
            {{- end }}
            {{- if $auth_data.auth_providers_keys }}
            {{- if $auth_data.auth_providers_keys.apple }}
            - name: auth-apple-secret
              mountPath: {{ .Values.configPath }}/apple
              subPath: apple
            {{- end }}
            {{- end }}
      volumes:
        - name: {{ $app_name }}-config-volume
          configMap:
            name: {{ include "account.auth.configmap.name" . }}
        {{- if and $account_data.config.auth_providers $account_data.config.auth_providers.saml }}
        {{- if $account_data.config.auth_providers.saml.google_saml }}
        {{- if eq $account_data.config.auth_providers.saml.google_saml.enabled true }}
        - name: metadata-google
          secret:
            secretName: {{ $account_data.config.auth_providers.saml.google_saml.secret_name | default "metadata-google-secret" }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if $account_data.persistantVolumeClaimCreate }}
        - name: {{ $app_name }}-pvc
          persistentVolumeClaim:
            claimName: {{ $account_data.persistantVolumeClaimName }}
            readOnly: false
        {{- end }}
        {{- if $auth_data.auth_providers_keys }}
        {{- if $auth_data.auth_providers_keys.apple }}
        - name: auth-apple-secret
          secret:
            secretName: {{ include "account.auth_provider_secret_name" . }}
            items:
            - key: apple
              path: apple
        {{- end }}
        {{- end }}
      {{- with $account_data.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- if $auth_data.affinity }}
        {{- toYaml $auth_data.affinity | nindent 8 }}
      {{- else if $account_data.affinity }}
        {{- toYaml $account_data.affinity | nindent 8 }}
      {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "module.auth.name" . }}
              topologyKey: kubernetes.io/hostname
      {{- with $account_data.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
