{{- $global_data := .Values.global -}}
{{- $account_data := $global_data.account -}}
{{- $workspace_data := $account_data.workspace -}}
{{- $auth_data := $account_data.auth -}}
{{- $app_name := (include "module.workspace.name" . ) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "account.workspace.deployment.name" . }}
  labels:
    {{- include "account.workspace.labels" . | nindent 4 }}
spec:
{{- if $workspace_data.autoscaling }}
{{- if $workspace_data.autoscaling.enabled }}
  replicas: {{ $workspace_data.autoscaling.minReplicas }}
{{- end }}
{{- end }}
  selector:
    matchLabels:
      {{- include "account.workspace.labels" . | nindent 6 }}
{{- with $global_data.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
{{- if eq $global_data.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
{{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "account.workspace.labels" . | nindent 8 }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{- include "account.workspace.serviceaccount.name" . | nindent 8 }}
      securityContext:
        {{- toYaml $account_data.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ $workspace_data.terminationGracePeriodSeconds | default 60 }}
      initContainers:
        - name: init-wait-database-resolve
          image: {{ include "account.common.initWait.image" . }}
          imagePullPolicy: {{ $global_data.imageInit.pullPolicy | default "IfNotPresent" }}
          command: ["sh"]
          args:
            - "-c"
            - |
              if ! echo ${POSTGRES_DBHOST} | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$'; then
                until IP=$(nslookup ${POSTGRES_DBHOST} 2>/dev/null | grep "Address: " | sed 's/.*: //g;s/ .*//g'); [ -n "$IP" ]; do
                  echo "Waiting for Database IP resolution";
                  sleep 2;
                done
              else
                echo "${POSTGRES_DBHOST} is already an IP address, skipping resolution.";
              fi
          env:
            {{- include "account.container_envs_db" . | trim | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        - name: init-wait-database-port
          image: {{ include "account.common.initWait.image" . }}
          imagePullPolicy: {{ $global_data.imageInit.pullPolicy | default "IfNotPresent" }}
          command: ['sh']
          args:
            - "-c"
            - |
              until nc -zvw1 ${POSTGRES_DBHOST} ${POSTGRES_DBPORT};
              do
                echo "Waiting for Database port available";
                sleep 2;
              done;
          env:
            {{- include "account.container_envs_db" . | trim | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        - name: init-wait-redis-resolve
          image: {{ include "account.common.initWait.image" . }}
          imagePullPolicy: {{ $global_data.imageInit.pullPolicy | default "IfNotPresent" }}
          command: ["sh"]
          args:
            - "-c"
            - |
              if ! echo ${REDIS_HOST} | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$'; then
                until IP=$(nslookup ${REDIS_HOST} 2>/dev/null | grep "Address: " | sed 's/.*: //g;s/ .*//g'); [ -n "$IP" ]; do
                  echo "Waiting for Redis IP resolution";
                  sleep 2;
                done
              else
                echo "${REDIS_HOST} is already an IP address, skipping resolution.";
              fi
          env:
            {{- include "account.container_envs_redis" . | trim | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        - name: init-wait-redis-port
          image: {{ include "account.common.initWait.image" . }}
          imagePullPolicy: {{ $global_data.imageInit.pullPolicy | default "IfNotPresent" }}
          command: ['sh']
          args:
            - "-c"
            - |
              until nc -zvw1 ${REDIS_HOST} ${REDIS_PORT};
              do
                echo "Waiting for Redis port available";
                sleep 2;
              done;
          env:
            {{- include "account.container_envs_redis" . | trim | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

      containers:
        - name: {{ include "module.workspace.name" . }}
          securityContext:
            {{- toYaml $account_data.securityContext | nindent 14 }}
          image: {{ include "account.workspace.imageUrl" . | quote }}
          imagePullPolicy: {{ $account_data.pullPolicy }}
          env:
            - name: SS_CONFIG
              value: {{ .Values.configPath }}/{{ .Values.configName }}
            {{- if .Values.global.account.config.one_app }}
            {{- if $auth_data.auth_providers_keys }}
            {{- if $auth_data.auth_providers_keys.apple }}
            - name: AUTH_APPLE_SECRET_PATH
              value: "{{ .Values.configPath }}/apple"
            {{- end }}
            {{- end }}
            {{- end }}
          {{- include "account.container_envs_redis" . | trim | nindent 12 }}
          {{- include "account.container_envs_db" . | trim | nindent 12 }}
          ports:
            - name: {{ include "account.workspace.portHttpName" . }}
              containerPort: {{ include "account.workspace.portNumber" . }}
              protocol: {{ include "account.workspace.portProtocol" . }}
            - name: metrics
              containerPort: {{ include "account.workspace.portMetricsNumber" . }}
              protocol: {{ include "account.workspace.portProtocol" . }}
          {{- include "account.workspace.liveness" . | nindent 10 }}
          {{- include "account.workspace.readiness" . | nindent 10 }}
          {{- with $workspace_data.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ $app_name }}-config-volume
              mountPath: {{ .Values.configPath }}/{{ .Values.configName }}
              subPath: config.yml
            {{- if $account_data.persistantVolumeClaimCreate }}
            - name: {{ $app_name }}-pvc
              mountPath: /{{ $account_data.persistantVolumeClaimShareDir }}
            {{- end }}
            {{- if .Values.global.account.config.one_app }}
            {{- if $account_data.config.auth_providers.saml }}
            {{- if $account_data.config.auth_providers.saml.google_saml }}
            {{- if eq $account_data.config.auth_providers.saml.google_saml.enabled true }}
            - name: metadata-google
              mountPath: /opt/conf/google_metadata.xml
              subPath: google_metadata.xml
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if $auth_data.auth_providers_keys }}
            {{- if $auth_data.auth_providers_keys.apple }}
            - name: auth-apple-secret
              mountPath: {{ .Values.configPath }}/apple
              subPath: apple
            {{- end }}
            {{- end }}
            {{- end }}
      volumes:
        - name: {{ $app_name }}-config-volume
          configMap:
            name: {{ include "account.workspace.configmap.name" . }}
        {{- if $account_data.persistantVolumeClaimCreate }}
        - name: {{ $app_name }}-pvc
          persistentVolumeClaim:
            claimName: {{ $account_data.persistantVolumeClaimName }}
            readOnly: false
        {{- end }}
        {{- if .Values.global.account.config.one_app }}
        {{- if $account_data.config.auth_providers.saml }}
        {{- if $account_data.config.auth_providers.saml.google_saml }}
        {{- if eq $account_data.config.auth_providers.saml.google_saml.enabled true }}
        - name: metadata-google
          secret:
            secretName: {{ $account_data.config.auth_providers.saml.google_saml.secret_name | default "metadata-google-secret" }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if $auth_data.auth_providers_keys }}
        {{- if $auth_data.auth_providers_keys.apple }}
        - name: auth-apple-secret
          secret:
            secretName: {{ include "account.auth_provider_secret_name" . }}
            items:
            - key: apple
              path: apple
        {{- end }}
        {{- end }}
        {{- end }}
      {{- with $account_data.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $account_data.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $account_data.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
